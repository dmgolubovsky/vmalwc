#! /bin/bash -ex

# stolen from the original coreos run script.

find_ssh_keys() {
    if [ -S "$SSH_AUTH_SOCK" ]; then
        ssh-add -L
    fi
    for default_key in ~/.ssh/id_*.pub; do
        if [ ! -f "$default_key" ]; then
            continue
        fi
        cat "$default_key"
    done
}

write_ssh_keys() {
    echo "#cloud-config"
    echo "ssh_authorized_keys:"
    sed -e 's/^/ - /'
}

CONFIG_DRIVE=$(mktemp -t -d loadcore-configdrive.XXXXXXXXXX)
if [ $? -ne 0 ] || [ ! -d "$CONFIG_DRIVE" ]; then
    echo "$0: mktemp -d failed!" >&2
    exit 1
fi
trap "rm -rf '$CONFIG_DRIVE'" EXIT
mkdir -p "${CONFIG_DRIVE}/openstack/latest"

#find_ssh_keys | write_ssh_keys > \
#   "${CONFIG_DRIVE}/openstack/latest/user_data"

cp -H /etc/localtime "${CONFIG_DRIVE}/host-localtime"

TOP=`dirname $0`

[ $TOP = "." ] && TOP=`pwd`

WDIR=${WDIR:-/tmp}

source $TOP/bldconfig

KERNEL=${KERNEL:-$TOP/external/linux-$KERVERSION/arch/x86_64/boot/bzImage}
KVM=${KVM:-$TOP/external/qemu-$QEMUVERSION/x86_64-softmmu/qemu-system-x86_64}
XDISPLAY=`echo $DISPLAY | tr -d ':' | cut -d. -f 1`

COREDIR=$TOP/external/coreos

if [ -r $COREDIR/coreos_production_qemu.sh ] ; then
	name=$(grep "^VM_NAME" $COREDIR/coreos_production_qemu.sh | head -n 1 | cut -d"=" -f 2 | tr -d \'\")
fi

name=${name:-loadcore}


eval `pax11publish -i`

if [ -z "$PULSE_SERVER" ] ; then
        export PULSE_SERVER=unix:`pactl info|grep "^Server String:"|cut -d":" -f 2|tr -d ' '`
fi

IMGSTOR="$WDIR/imagestore"

if [ ! -f $IMGSTOR ] ; then
	df=`df --output=avail $WDIR | tail -n 1`
	imsz=$(($df/4))
	fallocate -l ${imsz}K $IMGSTOR
	mkfs.btrfs $IMGSTOR
fi

sshkey=$(find_ssh_keys)

( 
cat <<EOF
#cloud-config
users:
  - name: $USER
    groups:
      - wheel
      - docker
      - systemd-journal
      - portage
      - core
      - sudo
    ssh-authorized-keys:
      - $sshkey
coreos:
  units:
    - name: copy-host-timezone.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/bin/cp /media/configvirtfs/host-localtime /etc/localtime
    - name: remove-default-user.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/sbin/userdel core
    - name: var-lib-machines.mount
      command: start
      content: |
        [Mount]
        What=/dev/vdb
        Where=/var/lib/machines
        Type=btrfs
EOF
) >> $CONFIG_DRIVE/openstack/latest/user_data

$TOP/bin/fghc -id $$-loadcore -mem 1G -kvm  $KVM -workdir $WDIR -video -audio -xdisplay $XDISPLAY \
	-hostname $name \
	-step loadcore -host -lbrst -xkernel $KERNEL -fwd 2222:22 -info $CONFIG_DRIVE/user_info \
		       -lib conf -path $CONFIG_DRIVE -ro -tag config-2 \
		       -lib core -path $COREDIR/coreos_production_qemu_image.img -snap -rw \
		       -lib imgstor -path $IMGSTOR -rw \
	-make &



FONT=${FONT:-terminus-18}

ssh-keyscan -v -p 2222 -T 20 -t dsa,ecdsa,ed25519 localhost

sleep 1

cd $WDIR

vmon=`find . -name "$$-loadcore*.monitor" || exit 0`

xterm -fn $FONT -fg lightgreen -bg black -title "$name: Console [$$]" -fullscreen \
	-e ssh -q -o StrictHostKeyChecking=no -p 2222 localhost && \
	(echo quit | socat stdio "unix-connect:$vmon")

