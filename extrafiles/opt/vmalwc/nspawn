#! /bin/bash -ex

# Use systemd-nspawn to start the application container.

([ -z "$1" ] || [ -z "$HOME" ] || [ -z "$USER" ] || [ -z "$NUID" ]) && {
	echo "No instance or home directory or username/uid provided"
	exit 1
}


app="$(echo $1 | sed 's/^[^/]*\///g')"
cont=$(echo "$1" | cut -d/ -f 1)

hcont=$cont

if (echo $cont | grep '=' ) ; then
	hcont=`echo $cont | cut -d'=' -f 2`
	cont=`echo $cont | cut -d'=' -f 1`
fi

if [ -d /mnt/host/persistent_home/$hcont ] && [ -w /mnt/host/persistent_home/$hcont ] ; then
	bhome=/mnt/host/persistent_home/$hcont
else
	/bin/mkdir -p $HOME/$hcont
	/bin/chown $USER $HOME/$hcont
	bhome=$HOME/$hcont
fi

/bin/mkdir -p /var/vmalwc/boxes/$hcont/inbox
/bin/chown $USER /var/vmalwc/boxes/$hcont/inbox
/usr/bin/systemctl start job-inbox@$hcont.path
/bin/mkdir -p /var/vmalwc/boxes/$hcont/outbox
/usr/bin/systemctl start job-outbox@$hcont.path

IMGDIR=/var/lib/machines/$cont

dbrs=`cd $IMGDIR && find . -name dbus-launch | head -n 1 | sed 's/^\.\///g'`

/usr/bin/systemd-nspawn -D $IMGDIR -x -u $NUID \
	--bind=$bhome:/$HOME \
	--bind=/var/vmalwc/boxes/$hcont/inbox:/var/vmalwc/inbox \
	--bind-ro=/var/vmalwc/boxes/$hcont/outbox:/var/vmalwc/outbox \
	--bind-ro=/var/vmalwc:/usr/share/vmalwc \
	--bind-ro=/var/vmalwc/allapps/desktop:/usr/share/applications \
	--bind-ro=/var/run/dbus:/var/run/dbus \
	--bind-ro=/var/run/dbus:/run/dbus \
	--bind-ro=/etc/resolv.conf \
	--bind-ro=/etc/passwd \
	--bind-ro=/etc/group \
	--bind-ro=/etc/localtime \
	--bind-ro=/etc/machine-id \
	--bind-ro=/opt/vmalwc/client:/opt/vmalwc/bin \
	--setenv=LANG=en_US.UTF-8 \
	--setenv=DISPLAY=$DISPLAY \
	--setenv=PULSE_SERVER=$PULSE_SERVER \
	--setenv=HOST_JOB_ENTRY=$HOST_JOB_ENTRY \
	--setenv=hostdisplay=$hostdisplay \
	--setenv=hostworkdir=$hostworkdir \
	--setenv=hostaddr=$hostaddr \
	--setenv=PATH=$PATH:/opt/vmalwc/bin:$HOME/bin \
	--setenv=CONTIMAGE=$cont \
	--setenv=HOMEIMAGE=$hcont \
	$dbrs -- $app

